package main

import (
	"crypto"
	"crypto/rsa"
	"crypto/x509"
	"encoding/pem"
	"net/url"

	"github.com/crewjam/saml"
	"github.com/crewjam/saml/samlsp"
)

// In a real deployment, this key would need to be set on a per-instance basis (provided via
// config, or generated by Fleet) and kept secret.
var spKey = func() crypto.PrivateKey {
	b, _ := pem.Decode([]byte(`-----BEGIN PRIVATE KEY-----
MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCcVtwj1e6m+Au6
KT3Iex1XY35iWO9vPwkNg2UaEfaGxjE5pzUec9l7tGp1nFY+5ZnuSHChzkalKk9W
IHt9ppIXTr78oF/IOLr6pJOMKG2tbcANlL8DDyKVkAKhxtn1kgDsNfGKOK00M9VJ
6gJG8yHeiugDr9funMD7bb4kBTyLHjZAgJNPu0Au3d/zc80FpqYt8f9t81gp+Cc9
SFZwGSqcuSh8V6V2AMrr0DzEoKkT4mJBcsKo40FFbB/9EgkePbbpnT5f7n3hwysc
oXxzLkS+kAX1PbXMo49pIG6sLJNwwSelPNkFxxOiWHMNrEcqQ7j7BnrHLmEXYlyn
4dE02d+FAgMBAAECggEAGwvc0DdHruuNDdLqLRd9azubZvS3UWHQlV2knTa71TOO
2wg+BItqtb+vxjJ6ai2q7GHsWFW4+4RfDsmWS5XIQs9883PkNh14XXmgy/fHh6AL
wF26ENOqukCcb/PYi6cLUVIAvBaTgkswTDX3WGJh+t/BhTfDzbQhH64r3YvpXjCh
z1+fKLCwLSWaU6GaTBNNo+1xMPypc6EjCImmQ1K/yu884vAs8RmfuqRbiWQ+JGpR
P8ZXR1BC4dEAH8FtZu8YY6IoZF/l5xCeQJlsDTdeGyonco23Q4ad8UCexbEKCrgi
+mgrQbYilQKMZB10zC0IFzKEy9eH6o3ZOMIlxqQroQKBgQDQb2d5P5f9kLG1n8Wr
71+Yd5aD3ksYJAwC6PgwnhTn+F1jCT9JMcrbsy+YpnFGyu+sM2iwRHpyw6AYKI1B
SA54LHLoX3RkuTObn/yg4JiSmxijLDNvEzqGyWIzAXiN0JXxvD3zZApueDduShvw
lsZ9YvdFv5NV8JX/HgocH1qUYQKBgQDABA+2s2nAJubRn7lDNMe00UmASCg4bgul
2MEYNhO/SDG1uBLtWCntEfVQydyM7aS2YVJRtnfC2T/y+OYMnHF/RArmLp9tV0+g
E+78/K6DwQaCPUrVwnBpiEDgi81HBtyXFd0EvNceWz3wgDZ6ymI3U7Kb6RCxiwuG
btuEUTFdpQKBgBSx6vkr6kBf3HUnDu5aTwiJXyVqrdQQyCyFyxawq2y4yTTrFyCC
VBzqNqCWbgrUXWWgmRVfRzUb3UpoxFWl/OHLsAEIcTsK9GfQQ7oJcryjr5eL7PNr
WlVFq31a+QhDnI+q3A/NcAe14fMOYqXJop2SdPC068ENqSbyaZiPOGQhAoGBAJij
Yd5pdtox0nC22K3NCif56sTYF2jsScQXrz/Q1RfMiv+aiSk1WXbEPM9w+CrrSnFU
ofyk4UT6MDS0mSNTRYHWlBdw3nkr2/czgVqIfy3rRoJHuPJ986BgmLonSBJ7KOXN
knmOqC7Qd0d0lFo+AZ9boHMB7axFDO9btpLTfDulAoGAPFqhBJV1bhSYyvJYFsy+
MlTfDoxjReRjdbs20wpOomA1QKbvBs++iAqFg/PLLrKT8Q6xtGQPi+6XPdp/wLuR
a1YiVZxnMNHUyiPdbrEOedgmXAIUXAjuxiIy/u4k+EKb7yTmSgtNJv5nDHeuWelb
oOfhCq1oEroJeSAmytedrrQ=
-----END PRIVATE KEY-----`))
	k, _ := x509.ParsePKCS1PrivateKey(b.Bytes)
	return k
}()

var spCert = func() *x509.Certificate {
	b, _ := pem.Decode([]byte(`-----BEGIN CERTIFICATE-----
MIIDITCCAgmgAwIBAgIUVViQ87K8F8nGf8tdG8qn6aYBMkQwDQYJKoZIhvcNAQEL
BQAwIDEeMBwGA1UEAwwVbXlzZXJ2aWNlLmV4YW1wbGUuY29tMB4XDTI0MDMxMzE4
MjUzMloXDTI1MDMxMzE4MjUzMlowIDEeMBwGA1UEAwwVbXlzZXJ2aWNlLmV4YW1w
bGUuY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAnFbcI9XupvgL
uik9yHsdV2N+Yljvbz8JDYNlGhH2hsYxOac1HnPZe7RqdZxWPuWZ7khwoc5GpSpP
ViB7faaSF06+/KBfyDi6+qSTjChtrW3ADZS/Aw8ilZACocbZ9ZIA7DXxijitNDPV
SeoCRvMh3oroA6/X7pzA+22+JAU8ix42QICTT7tALt3f83PNBaamLfH/bfNYKfgn
PUhWcBkqnLkofFeldgDK69A8xKCpE+JiQXLCqONBRWwf/RIJHj226Z0+X+594cMr
HKF8cy5EvpAF9T21zKOPaSBurCyTcMEnpTzZBccTolhzDaxHKkO4+wZ6xy5hF2Jc
p+HRNNnfhQIDAQABo1MwUTAdBgNVHQ4EFgQUYxvp8EqkNe6jxYg/I2QudT+PlGgw
HwYDVR0jBBgwFoAUYxvp8EqkNe6jxYg/I2QudT+PlGgwDwYDVR0TAQH/BAUwAwEB
/zANBgkqhkiG9w0BAQsFAAOCAQEAe5rKAJmANobV68PFFca6VtNPIXpDVDgmT/A1
ulYUS9XI5/zWDtpiCaxAKz67YJLMG1547oKAEqmhtNVw72orafm50PWV+50YnWJW
DHnpOp+FCnkTY946+3gKAKtFTIIWo0wNiIGZNcdty/9FM8voUGxcC3PiI90MRnk9
dUySU3HIp6ozWjcbzFBYCE76vxOE7gNy++Y4/Ma+pp2fvMS2crnnb5DVqBw2jzj9
vxTQxSyJlWC2LXrV4e0CHv0rwBM7DIOlcc9yNEdHVwogDsffZW/j7gF+82GZ68hk
qNBsNeKXV2h42GEfE+MlfxQwt3MbqcH4drqLEB0NovU2Gl+OMA==
-----END CERTIFICATE-----`))
	c, _ := x509.ParseCertificate(b.Bytes)
	return c
}()

func getSP() *saml.ServiceProvider {
	u, err := url.Parse("http://" + addr)
	if err != nil {
		panic(err)
	}
	samlSP := &samlsp.DefaultServiceProvider(samlsp.Options{
		URL:            *u,
		Key:            spKey.(*rsa.PrivateKey),
		Certificate:    spCert,
		IDPMetadataURL: *u,
	})

	return samlSP
}
